apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: {{ .Values.config.port }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.config.port }}
          initialDelaySeconds: 10
          timeoutSeconds: 200
        volumeMounts:
        - name: config
          mountPath: /etc/registrar  
        - name: matrix-db
          mountPath: {{ dir .Values.config.matrix_db_path }}
        - name: registrar-db
          mountPath: {{ dir .Values.config.registrar_db_path }}
      {{- if eq .Values.environment "production" }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}  
      {{ if ne .Values.environment "production" }}
      - name: matrix-db
        emptyDir: {}
      - name: registrar-db
        emptyDir: {}  
      {{ else }}
  volumeClaimTemplates:
  - metadata:
      name: matrix-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: registrar-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi        
      {{ end }}